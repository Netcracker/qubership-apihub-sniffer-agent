# Copyright 2024-2025 NetCracker Technology Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

openapi: 3.0.3
info:
  title: APIHUB sniffer API
  description: |
    The API allows to control packet capture
security:
  - ApiKeyAuth: []
tags:
  - name: Capture
    description: Operations to capture network packets
  - name: Info
    description: API provides information about current environment
  - name: Non-production
    description: Non-production (development, debug, testing) API
  - name: Status report
    description: Pre-defined API to report status for cloud
  - name: Readiness report
    description: To acknowledge readiness when startup has been completed
  - name: Process startup result
    description: To acknowledge that process is starting

paths:
  "/api/v1/admin/capture/start":
    post:
      tags:
        - Capture
      summary: Opens network packet capture
      description: Starts network packet capture for the whole cloud
      operationId: startCapture
      security:
        - ApiKeyAuth: []
      requestBody:
        description: Capture start parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id: 
                  type: string
                  description: Capture identifier (mandatory parameter)
                  format: uuid
                  example: "1c7ec49c-3165-4654-8e06-0ec286cf31d8"
                filter: 
                  type: string
                  description: Capture packet filter to restrict packets (mandatory parameter)
                  example: "tcp and (((ip[2:2] - ((ip[0]&0xf)<<2)) - ((tcp[12]&0xf0)>>2)) != 0)"
                packet_count: 
                  type: integer
                  description: A limit of packet count to capture. Capture will stop when the limit will be reached. Limitless by default.
                  example: 100500
                duration: 
                  type: string
                  description: A limit of time to capture (go-style string). Capture will stop when the limit will be reached. One minute by default.
                  example: "1m30s"
                file_size: 
                  type: integer
                  description: A limit to capture data stored in a single file. When the limit reached tne next file will be opened. Limitless by default.
                  example: 681574400
                time_stamp: 
                  type: string
                  description: A timestamp string (RFC3339) for start notification requests.
                  example: "2024-01-01T00:00:00"
                check_sum: 
                  type: string
                  description: An MD5 checksum (hex string) to validate start notification request.
                  example: "1c7ec49c-3165-4654-8e06-0ec286cf31d8"
                namespace:
                  type: array
                  items:
                    type: string
                    example: "api-hub-dev"
                  description: A cloud namespace names to filter requests.
                  example: ["api-hub-dev"]
              required:
                - filter
                - duration
            example: {"filter":"tcp and (((ip[2:2] - ((ip[0]&0xf)<<2)) - ((tcp[12]&0xf0)>>2)) != 0)", "duration":"30s", "namespaces":["api-hub-dev-fe", "api-hub-dev"]}
        required: true

      responses:
        "202":
          description: Start request accepted
          content:
            application/json:
              schema:
                description: Capture start response
                type: object
                properties:
                  status:
                    description: Capture start result
                    type: string
                    enum: [NONE, STARTED, STARTING]
                    example: "STARTED"
                  id:
                    description: Capture identifier
                    type: string
                    format: uuid
                    example: "1c7ec49c-3165-4654-8e06-0ec286cf31d8"
              example: {"status": "STARTING", "id": "1c7ec49c-3165-4654-8e06-0ec286cf31d8" }
        "401":
          description: Unauthorized at capture start
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden at capture start
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found or incorrect id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error at capture start
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"

  "/api/v1/admin/capture/stop":
    post:
      tags:
        - Capture
      summary: Closes network packet capture
      description: Stops existing network packet capture
      operationId: stopCapture
      security:
        - ApiKeyAuth: []
      requestBody:
        description: Capture stop parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                id: 
                  type: string
                  description: Capture to stop identifier (mandatory parameter)
                  format: uuid
                  example: "1c7ec49c-3165-4654-8e06-0ec286cf31d8"
                time_stamp: 
                  type: string
                  description: A timestamp string (RFC3339) for stop notification requests.
                  example: "2024-01-01T00:00:00"
                check_sum: 
                  type: string
                  description: An MD5 checksum (hex string) to validate stop notification request.
                  example: "1c7ec49c-3165-4654-8e06-0ec286cf31d8"
              required:
                - id
            example: {"id":"1c7ec49c-3165-4654-8e06-0ec286cf31d8"}
        required: true
      responses:
        "202":
          description: Stop request accepted
          content:
            application/json:
              schema:
                description: Capture stop response
                type: object
                properties:
                  status:
                    description: Capture stop result
                    type: string
                    enum: [NONE, STOPPED, COMPLETED]
                    example: "STOPPED"
              example: {"status": "STOPPED"}
        "400":
          description: Bad request at capture stop
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized (improper API_KEY or INTERNAL_KEY at capture stop)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden at capture stop
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error at capture stop
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"

  "/api/v1/admin/capture/status":
    get:
      tags:
        - Capture
      summary: Reports current capture status summary
      description: Reports current capture status
      operationId: captureStatus
      security:
        - ApiKeyAuth: []
      responses:
        "202":
          description: Current capture status
          content:
            application/json:
              schema:
                description: Capture status response
                type: object
                properties:
                  status:
                    description: Capture status text
                    type: string
                    enum: [NONE, STARTED, FAILED, STOPPED, COMPLETED, STOPPING, STARTING]
                    example: "STOPPED"
                  id:
                    type: string
                    description: Capture identifier being reported
                    format: uuid
                    example: "1c7ec49c-3165-4654-8e06-0ec286cf31d8"
              example: {"status": "STARTED","id": "cc0fbdf0-dd32-4cb3-ae92-667902e7cb13"}
        "400":
          description: Bad request at capture status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized (improper API_KEY) at capture status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden at capture status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error at capture status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"

  "/api/v1/admin/capture/interfaces":
    get:
      tags:
        - Info
      summary: List of the network interfaces available for capture
      operationId: listInterfaces
      security:
        - ApiKeyAuth: []
      description: List currently available network interfaces
      responses:
        "200":
          description: Interface list
          content:
            application/json:
              schema:
                description: Interface names array
                type: array
                items:
                  type: string
                  example: "eth0"
              example: ["eth0", "loopback"]
        "401":
          description: Unauthorized (improper API_KEY at interface list)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden at interface list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
  "/api/v1/admin/capture/namespaces":
    get:
      tags:
        - Info
      summary: List currently visible namespaces
      operationId: listNamespaces
      security:
        - ApiKeyAuth: []
      description: Visible namespace list
      responses:
        "200":
          description: Namespace list
          content:
            application/json:
              schema:
                description: Namespace names array
                type: array
                items:
                  type: string
                  example: "api-hub-dev"
              example: ["api-hub-dev", "api-hub-dev-fe", "apihub-sniffer"]
        "401":
          description: Unauthorized (improper API_KEY at namespace list)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden at namespace list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
  "/api/v1/admin/capture/addresses":
    get:
      tags:
        - Info
        - Non-production
      summary: List currently available network addresses
      operationId: localAddressList
      security:
        - ApiKeyAuth: []
      description: Local address list, will not be available in production mode
      responses:
        "200":
          description: An address map
          content:
            application/json:
              schema:
                description: map ("ip address" => "network interface")
                type: object
                additionalProperties:
                    type: string
              example: { "10.128.248.64": "tunl0","127.0.0.1": "lo", "192.168.3.13": "eth0"}
        "401":
          description: Unauthorized (improper API_KEY at address map)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden at address map
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
  "/api/v1/admin/capture/neighbours":
    get:
      tags:
        - Info
        - Non-production
      summary: List of the currently present daemon-set nodes, excluding current
      operationId: neighboursList
      security:
        - ApiKeyAuth: []
      description: List of the currently present daemon-set nodes, will not be available in production mode
      responses:
        "200":
          description: An IP address array (not including current node)
          content:
            application/json:
              schema:
                description: String array
                type: array
                items:
                  type: string
              example: ["192.168.3.29","192.168.3.13"]
        "401":
          description: Unauthorized (improper API_KEY at neighbours list)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden at neighbours list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
  "/live":
    get:
      tags:
        - Status report
      summary: reports status to the cloud
      description: reports status to the cloud to prove normal process functioning
      operationId: live
      responses:
        "200":
          description: Service operational
        "500":
          description: Internal Server Error at alive check

  "/ready":
    get:
      tags:
        - Readiness report
      summary: reports process readiness to the cloud
      description: reports process readiness to the cloud to prove normal process functioning
      operationId: ready
      responses:
        "200":
          description: Service ready
        "500":
          description: Internal Server Error at readiness

  "/startup":
    get:
      tags:
        - Process startup result
      summary: reports success process startup to the cloud
      description: reports success process startup to the cloud to prove normal process functioning
      operationId: startup
      responses:
        "200":
          description: Service startup completed
        "500":
          description: Internal Server Error at startup

components:
  securitySchemes:
    ApiKeyAuth: # arbitrary name for the security scheme
      type: apiKey
      in: header # can be "header", "query" or "cookie"
      name: api-key # name of the header, query parameter or cookie
      description: API key authentification/authorization
  schemas:
    ErrorResponse:
      description: An error description
      type: object
      properties:
        status:
          description: HTTP Status Code
          type: number
          example: 500
        code:
          description: Internal string error code. Mandatory in response.
          type: string
          example: "APIHUB-8000"
        message:
          description: The attribute contains an error message.
          type: string
          example: "InternalServerError"
        params:
          type: object
          description: Message parameters
          example:
            id: 12345
            type: string
        debug:
          description: The attribute contains debug details (e.g. stack-trace). Presented in the error response only on Dev/Test environments if corresponding logging level is enabled.
          type: string
          example: "debug info"
      required:
        - status
        - code
        - message
  examples:
    InternalServerError:
      description: Default internal server error
      value:
        status: "500"
        code: "APIHUB-8000"
        reason: "InternalServerError"
        message: "InternalServerError"
    IncorrectInputParameters:
      description: Incorrect input parameters
      value:
        status: "400"
        code: "APIHUB-COMMON-4001"
        message: "Incorrect input parameters"